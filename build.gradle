buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        // classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

group = 'com.haruhifanclub'
archivesBaseName = "haruhiism"
project.ext.modVersion= "${haruhiism_version}"
project.ext.modName = 'Haruhiism'
project.ext.modId = 'haruhiism'
apply from: 'gradle/version.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"
    runs {
        client {
            workingDirectory project.file('run').canonicalPath
            property 'file.encoding', 'UTF-8'
            property 'user.language', 'en'
            property 'log4j.configurationFile', 'log4j2.xml'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                haruhiism {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run').canonicalPath
            property 'file.encoding', 'UTF-8'
            property 'user.language', 'en'
            property 'log4j.configurationFile', 'log4j2.xml'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                haruhiism {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.remove(sourceSets.test)

repositories {
    maven {
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url "https://maven.pkg.github.com/auioc/arnicalib-mcmod"
        credentials {
            username = System.getenv("GITHUB_ACTOR") ? System.getenv("GITHUB_ACTOR") : System.getenv("GITHUB_USERNAME")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")

    if (local_debug.toBoolean()){
        implementation fileTree(dir: 'libs', include: ['*/*-forgelib.jar', '*/*-api.jar'])
    } else {
        implementation "org.auioc.mcmod:arnicalib:${minecraft_version}-${arnicalib_version}:forgelib"
    }

    if (System.getenv('GITHUB_ACTOR') == null) {
        runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
        runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
        runtimeOnly fg.deobf("curse.maven:jade-324717:${jade_version}")
    }
}

apply from: 'gradle/tasks.gradle'

apply from: 'gradle/artifacts.gradle'

apply from: 'gradle/publishing.gradle'
apply from: 'gradle/signing.gradle'
